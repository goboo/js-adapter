{"version":3,"sources":["goboo.js","goboo.Adapter.js","goboo.Booking.js","goboo.Mode.js","goboo.Slot.js"],"names":[],"mappings":"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","file":"goboo-adapter.js","sourcesContent":["/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * {@link http://goboo.de goboo - GET IT. BOOK IT}\n *\n * online booking system by karo media\n *\n * @module goboo/Adapter\n *\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\n\n/**\n * The goboo namespace.\n * @namespace\n */\nvar goboo = goboo || {};\nwindow.goboo = goboo;\n\n/**\n * Current initialized environment.\n *\n * @access public\n */\ngoboo.env = {};\n\n/**\n * The active adapter.\n *\n * @access public\n */\ngoboo.env.adapter = null;\n\n/**\n * Initialized the environment.\n *\n * @param object options\n * @access public\n */\ngoboo.init = function(customOptions) {\n\tvar options = {\n\t\t'host': 'demo.goboo.io'\n\t};\n\n\tfor (var key in (customOptions || {})) {\n\t\toptions[key] = customOptions[key];\n\t}\n\n\tgoboo.env.adapter = new goboo.Adapter(options);\n};\n","/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Create a new adapter to communicate with the goboo API.\n *\n * @memberOf goboo\n * @class\n * @classdesc Adapter to communicate with the goboo API.\n * @constructor\n * @access public\n *\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\ngoboo.Adapter = function(customOptions) {\n\t\"use strict\";\n\n\t/**\n\t * The adapters options.\n\t *\n\t * @methodOf goboo.Adapter\n\t * @type {object}\n\t * @access private\n\t */\n\tvar options = {\n\t\t'host': 'demo.goboo.de',\n\t\t'path': ''\n\t};\n\n\tfor (var key in (customOptions || {})) {\n\t\toptions[key] = customOptions[key];\n\t}\n\n\t/**\n\t * Base URL to API.\n\t *\n\t * @methodOf goboo.Adapter\n\t * @type {string}\n\t * @access private\n\t */\n\tvar baseUrl = 'http://' + options.host + options.path + '/api/v3/';\n\n\t/**\n\t * List all slots between two dates.\n\t *\n\t * @methodOf goboo.Adapter\n\t * @alias goboo.Adapter#listSlots\n\t * @access public\n\t * @param {int} roomId\n\t * @param {Date} from\n\t * @param {Date} until\n\t * @param {function} callback\n\t * @returns {@link goboo.Slot}[]\n\t */\n\tthis.listSlots = function(roomId, from, until, callback) {\n\t\tvar parameters = [];\n\t\tif (from) {\n\t\t\tparameters.push('from=' + encodeURIComponent(from.toW3CString()));\n\t\t}\n\t\tif (until) {\n\t\t\tparameters.push('until=' + encodeURIComponent(until.toW3CString()));\n\t\t}\n\t\tvar query = '';\n\t\tif (parameters.length) {\n\t\t\tquery = '?' + parameters.join('&');\n\t\t}\n\t\tvar r = new XMLHttpRequest();\n\t\tr.open(\"GET\", baseUrl + \"rest/room/\" + roomId + \"/slots\" + query, true);\n\t\tr.onreadystatechange = function () {\n\t\t\tif (r.readyState != 4) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar json;\n\t\t\tif (r.status != 200) {\n\t\t\t\tjson = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjson = JSON.parse(r.responseText);\n\t\t\t}\n\n\t\t\tvar slots = [];\n\t\t\tif (json) {\n\t\t\t\tfor (var index in json.slots) {\n\t\t\t\t\tvar slotData = json.slots[index];\n\t\t\t\t\tvar slot = new goboo.Slot();\n\t\t\t\t\tslot.setId(slotData.id);\n\t\t\t\t\tslot.setRoomId(roomId);\n\t\t\t\t\tslot.setStartDateTime(new Date(slotData.startDateTime));\n\t\t\t\t\tslot.setDuration(slotData.duration);\n\t\t\t\t\tslot.setPlayTime(slotData.playTime);\n\t\t\t\t\tslot.setCapacity(slotData.capacity);\n\t\t\t\t\tslot.setAttendance(slotData.attendance);\n\t\t\t\t\tslot.setPlayers(slotData.players);\n\t\t\t\t\tslot.setLocked(slotData.locked);\n\t\t\t\t\tslots.push(slot);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback(slots);\n\t\t};\n\t\tr.send();\n\t};\n\n\t/**\n\t * List predecessors of a specific slot.\n\t *\n\t * @methodOf goboo.Adapter\n\t * @alias goboo.Adapter#listSlots\n\t * @access public\n\t * @param {goboo.Slot} slot\n\t * @param {int} limit\n\t * @param {function} callback\n\t * @returns {@link goboo.Slot}[]\n\t */\n\tthis.listSlotPredecessors = function(slot, limit, callback) {\n\t\tvar query = limit ? ('?limit=' + limit) : '';\n\n\t\tvar r = new XMLHttpRequest();\n\t\tr.open(\"GET\", baseUrl + \"rest/room/\" + slot.getRoomId() + \"/slot/\" + slot.getId() + '/predecessors' + query, true);\n\t\tr.onreadystatechange = function () {\n\t\t\tif (r.readyState != 4) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar json;\n\t\t\tif (r.status != 200) {\n\t\t\t\tjson = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjson = JSON.parse(r.responseText);\n\t\t\t}\n\n\t\t\tvar slots = [];\n\t\t\tif (json) {\n\t\t\t\tfor (var index in json) {\n\t\t\t\t\tvar slotData = json[index];\n\t\t\t\t\tvar slot = new goboo.Slot();\n\t\t\t\t\tslot.setId(slotData.id);\n\t\t\t\t\tslot.setRoomId(roomId);\n\t\t\t\t\tslot.setStartDateTime(new Date(slotData.startDateTime));\n\t\t\t\t\tslot.setDuration(slotData.duration);\n\t\t\t\t\tslot.setPlayTime(slotData.playTime);\n\t\t\t\t\tslot.setCapacity(slotData.capacity);\n\t\t\t\t\tslot.setAttendance(slotData.attendance);\n\t\t\t\t\tslot.setPlayers(slotData.players);\n\t\t\t\t\tslot.setLocked(slotData.locked);\n\t\t\t\t\tslots.push(slot);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback(slots);\n\t\t};\n\t\tr.send();\n\t};\n\n\t/**\n\t * List successors of a specific slot.\n\t *\n\t * @methodOf goboo.Adapter\n\t * @alias goboo.Adapter#listSlots\n\t * @access public\n\t * @param {goboo.Slot} slot\n\t * @param {int} limit\n\t * @param {function} callback\n\t * @returns {@link goboo.Slot}[]\n\t */\n\tthis.listSlotSuccessors = function(slot, limit, callback) {\n\t\tvar query = limit ? ('?limit=' + limit) : '';\n\n\t\tvar r = new XMLHttpRequest();\n\t\tr.open(\"GET\", baseUrl + \"rest/room/\" + slot.getRoomId() + \"/slot/\" + slot.getId() + '/successors' + query, true);\n\t\tr.onreadystatechange = function () {\n\t\t\tif (r.readyState != 4) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar json;\n\t\t\tif (r.status != 200) {\n\t\t\t\tjson = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjson = JSON.parse(r.responseText);\n\t\t\t}\n\n\t\t\tvar slots = [];\n\t\t\tif (json) {\n\t\t\t\tfor (var index in json) {\n\t\t\t\t\tvar slotData = json[index];\n\t\t\t\t\tvar slot = new goboo.Slot();\n\t\t\t\t\tslot.setId(slotData.id);\n\t\t\t\t\tslot.setRoomId(slotData.room);\n\t\t\t\t\tslot.setStartDateTime(new Date(slotData.startDateTime));\n\t\t\t\t\tslot.setDuration(slotData.duration);\n\t\t\t\t\tslot.setPlayTime(slotData.playTime);\n\t\t\t\t\tslot.setCapacity(slotData.capacity);\n\t\t\t\t\tslot.setAttendance(slotData.attendance);\n\t\t\t\t\tslot.setPlayers(slotData.players);\n\t\t\t\t\tslot.setLocked(slotData.locked);\n\t\t\t\t\tslots.push(slot);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback(slots);\n\t\t};\n\t\tr.send();\n\t};\n\n\t/**\n\t * Get details of one slot.\n\t *\n\t * @memberOf goboo.Adapter\n\t * @alias goboo.Adapter#getSlot\n\t * @access public\n\t * @param {int} roomId\n\t * @param {int} slotId\n\t * @param {function} callback\n\t * @returns {@link goboo.Slot}\n\t */\n\tthis.getSlot = function(roomId, slotId, callback) {\n\t\tvar r = new XMLHttpRequest();\n\t\tr.open(\"GET\", baseUrl + \"rest/room/\" + roomId + \"/slot/\" + slotId, true);\n\t\tr.onreadystatechange = function () {\n\t\t\tif (r.readyState != 4) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar json;\n\t\t\tif (r.status != 200) {\n\t\t\t\tjson = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjson = JSON.parse(r.responseText);\n\t\t\t}\n\n\t\t\tvar slot = null;\n\t\t\tif (json) {\n\t\t\t\tslot = new goboo.Slot();\n\t\t\t\tslot.setId(json.id);\n\t\t\t\tslot.setRoomId(json.room);\n\t\t\t\tslot.setStartDateTime(new Date(json.startDateTime));\n\t\t\t\tslot.setDuration(json.duration);\n\t\t\t\tslot.setPlayTime(json.playTime);\n\t\t\t\tslot.setCapacity(json.capacity);\n\t\t\t\tslot.setAttendance(json.attendance);\n\t\t\t\tslot.setPlayers(json.players);\n\t\t\t\tslot.setLocked(json.locked);\n\n\t\t\t\tvar modes = [];\n\t\t\t\tfor (var index in json.availableModes) {\n\t\t\t\t\tvar mode = new goboo.Mode();\n\t\t\t\t\tmode.setToken(modeData.token);\n\t\t\t\t\tmode.setLabel(modeData.label);\n\t\t\t\t\tmode.setDescription(modeData.description);\n\t\t\t\t\tmode.setMinAttendance(modeData.minAttendance);\n\t\t\t\t\tmode.setMaxAttendance(modeData.maxAttendance);\n\t\t\t\t\tmode.setVotes(modeData.votes);\n\t\t\t\t\tmodes.push(mode);\n\t\t\t\t}\n\n\t\t\t\tslot.setAvailableModes(modes);\n\t\t\t}\n\n\t\t\tcallback(slot);\n\t\t};\n\t\tr.send();\n\t};\n\n\t/**\n\t * Book a slot.\n\t *\n\t * @memberOf goboo.Adapter\n\t * @alias goboo.Adapter#bookSlot\n\t * @access public\n\t * @param {goboo.Booking} booking The booking details.\n\t * @param {function} successCallback Callback triggered on success.\n\t * @param {function} failCallback Callback triggered on failure.\n\t * @returns {@link goboo.Slot}\n\t */\n\tthis.bookSlot = function(booking, successCallback, failCallback) {\n\t\tvar slots   = booking.getSlots();\n\t\tvar roomId  = null;\n\t\tvar roomIds = {};\n\t\tvar slotIds = [];\n\t\tfor (var slotIndex in slots) {\n\t\t\tvar slot = slots[slotIndex];\n\n\t\t\troomId = slot.getRoomId();\n\t\t\troomIds[roomId] = true;\n\t\t\tslotIds.push(slot.getId());\n\t\t}\n\n\t\tif (roomIds.length > 1) {\n\t\t\tthrow \"A booking can only contain slots from the same room.\";\n\t\t}\n\t\telse if (roomIds.length < 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar d = {\n\t\t\tname: booking.getName(),\n\t\t\tmobile: booking.getMobile(),\n\t\t\temail: booking.getEmail(),\n\t\t\tstreet: booking.getStreet(),\n\t\t\tpostcode: booking.getPostcode(),\n\t\t\tcity: booking.getCity(),\n\t\t\tattendance: booking.getAttendance(),\n\t\t\tplayers: booking.getPlayers(),\n\t\t\texclusive: booking.isExclusive(),\n\t\t\tpreferredModes: booking.getPreferredModes(),\n\t\t\tnotes: booking.getNotes(),\n\t\t\tslots: slotIds\n\t\t};\n\n\t\tvar r = new XMLHttpRequest();\n\t\tr.open(\"POST\", baseUrl + \"rest/room/\" + roomId + \"/book\", true);\n\t\tr.setRequestHeader(\"Content-type\", \"application/json\");\n\t\tr.onreadystatechange = function () {\n\t\t\tif (r.readyState != 4) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar json;\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(r.responseText);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tjson = false;\n\t\t\t}\n\n\t\t\tvar slot = null;\n\t\t\tif (!json) {\n\t\t\t\tfailCallback(false, r);\n\t\t\t}\n\t\t\telse if (json.error) {\n\t\t\t\tfailCallback(json.error.message, r);\n\t\t\t}\n\t\t\telse if (r.status != 200) {\n\t\t\t\tfailCallback(false, r);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsuccessCallback(json, r);\n\t\t\t}\n\t\t};\n\t\tr.send(JSON.stringify(d));\n\t};\n};\n","/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Create a new booking.\n *\n * @memberOf goboo\n * @class\n * @classdesc The booking.\n * @constructor\n * @access public\n *\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\ngoboo.Booking = function() {\n\tvar name;\n\tvar mobile;\n\tvar email;\n\tvar street;\n\tvar postcode;\n\tvar city;\n\tvar slots;\n\tvar attendance;\n\tvar players;\n\tvar exclusive;\n\tvar preferredModes;\n\tvar notes;\n\n\t/**\n\t * Get the contact name of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getName\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getName = function() {\n\t\treturn name;\n\t};\n\n\t/**\n\t * Set the contact name of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setName\n\t * @access public\n\t */\n\tthis.setName = function(newName) {\n\t\tname = newName;\n\t};\n\n\t/**\n\t * Get the contact mobile phone number of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getMobile\n\t * @access public\n\t * @returns Date\n\t */\n\tthis.getMobile = function() {\n\t\treturn mobile;\n\t};\n\n\t/**\n\t * Set the contact mobile phone number of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setMobile\n\t * @access public\n\t */\n\tthis.setMobile = function(newMobile) {\n\t\tmobile = newMobile;\n\t};\n\n\t/**\n\t * Get the contact email address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getEmail\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getEmail = function() {\n\t\treturn email;\n\t};\n\n\t/**\n\t * Set the contact email address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setEmail\n\t * @access public\n\t */\n\tthis.setEmail = function(newEmail) {\n\t\temail = newEmail;\n\t};\n\n\t/**\n\t * Get the contact street address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getStreet\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getStreet = function() {\n\t\treturn street;\n\t};\n\n\t/**\n\t * Set the contact street address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setStreet\n\t * @access public\n\t */\n\tthis.setStreet = function(newStreet) {\n\t\tstreet = newStreet;\n\t};\n\n\t/**\n\t * Get the contact postcode address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getPostcode\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getPostcode = function() {\n\t\treturn postcode;\n\t};\n\n\t/**\n\t * Set the contact postcode address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setPostcode\n\t * @access public\n\t */\n\tthis.setPostcode = function(newPostcode) {\n\t\tpostcode = newPostcode;\n\t};\n\n\t/**\n\t * Get the contact city address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getCity\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getCity = function() {\n\t\treturn city;\n\t};\n\n\t/**\n\t * Set the contact city address of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setCity\n\t * @access public\n\t */\n\tthis.setCity = function(newCity) {\n\t\tcity = newCity;\n\t};\n\n\t/**\n\t * Get the slots of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getSlots\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getSlots = function() {\n\t\treturn slots;\n\t};\n\n\t/**\n\t * Set the slot of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setSlots\n\t * @access public\n\t */\n\tthis.setSlots = function(newSlots) {\n\t\tslots = newSlots;\n\t};\n\n\t/**\n\t * Get the attendance of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getAttendance\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getAttendance = function() {\n\t\treturn attendance;\n\t};\n\n\t/**\n\t * Set the attendance of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setAttendance\n\t * @access public\n\t */\n\tthis.setAttendance = function(newAttendance) {\n\t\tattendance = newAttendance;\n\t};\n\n\t/**\n\t * Get the players of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getPlayers\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getPlayers = function() {\n\t\treturn players;\n\t};\n\n\t/**\n\t * Set the players of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setPlayers\n\t * @access public\n\t */\n\tthis.setPlayers = function(newPlayers) {\n\t\tplayers = newPlayers;\n\t};\n\n\t/**\n\t * Get the exclusive of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getExclusive\n\t * @access public\n\t * @returns bool\n\t */\n\tthis.isExclusive = function() {\n\t\treturn exclusive;\n\t};\n\n\t/**\n\t * Set the exclusive of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setExclusive\n\t * @access public\n\t */\n\tthis.setExclusive = function(newExclusive) {\n\t\texclusive = newExclusive;\n\t};\n\n\t/**\n\t * Get the preferredModes of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getPreferredModes\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getPreferredModes = function() {\n\t\treturn preferredModes;\n\t};\n\n\t/**\n\t * Set the preferredModes of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setPreferredModes\n\t * @access public\n\t */\n\tthis.setPreferredModes = function(newPreferredModes) {\n\t\tpreferredModes = newPreferredModes;\n\t};\n\n\t/**\n\t * Get the notes of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#getNotes\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getNotes = function() {\n\t\treturn notes;\n\t};\n\n\t/**\n\t * Set the notes of the booking.\n\t *\n\t * @memberof goboo.Booking\n\t * @alias goboo.Booking#setNotes\n\t * @access public\n\t */\n\tthis.setNotes = function(newNotes) {\n\t\tnotes = newNotes;\n\t};\n};\n","/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Create a new mode.\n *\n * @memberOf goboo\n * @class\n * @classdesc The mode representing a game mode. As part of a slot the min and max attendance and vote count is provided.\n * @constructor\n * @access public\n *\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\ngoboo.Mode = function() {\n\tvar token;\n\tvar label;\n\tvar description;\n\tvar minAttendance;\n\tvar maxAttendance;\n\tvar votes;\n\n\t/**\n\t * Get the token of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#getToken\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getToken = function() {\n\t\treturn token;\n\t}\n\n\t/**\n\t * Set the token of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#setToken\n\t * @access public\n\t */\n\tthis.setToken = function(newToken) {\n\t\ttoken = newToken;\n\t}\n\n\t/**\n\t * Get the label of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#getLabel\n\t * @access public\n\t * @returns Date\n\t */\n\tthis.getLabel = function() {\n\t\treturn label;\n\t}\n\n\t/**\n\t * Set the label of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#setLabel\n\t * @access public\n\t */\n\tthis.setLabel = function(newLabel) {\n\t\tlabel = newLabel;\n\t}\n\n\t/**\n\t * Get the description of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#getDescription\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getDescription = function() {\n\t\treturn description;\n\t}\n\n\t/**\n\t * Set the description of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#setDescription\n\t * @access public\n\t */\n\tthis.setDescription = function(newDescription) {\n\t\tdescription = newDescription;\n\t}\n\n\t/**\n\t * Get the minAttendance of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#getMinAttendance\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getMinAttendance = function() {\n\t\treturn minAttendance;\n\t}\n\n\t/**\n\t * Set the minAttendance of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#setMinAttendance\n\t * @access public\n\t */\n\tthis.setMinAttendance = function(newMinAttendance) {\n\t\tminAttendance = newMinAttendance !== null ? parseInt(newMinAttendance) : null;\n\t}\n\n\t/**\n\t * Get the maxAttendance of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#getMaxAttendance\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getMaxAttendance = function() {\n\t\treturn maxAttendance;\n\t}\n\n\t/**\n\t * Set the maxAttendance of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#setMaxAttendance\n\t * @access public\n\t */\n\tthis.setMaxAttendance = function(newMaxAttendance) {\n\t\tmaxAttendance = newMaxAttendance !== null ? parseInt(newMaxAttendance) : null;\n\t}\n\n\t/**\n\t * Get the votes of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#getVotes\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getVotes = function() {\n\t\treturn votes;\n\t}\n\n\t/**\n\t * Set the votes of this mode.\n\t *\n\t * @memberof goboo.Mode\n\t * @alias goboo.Mode#setVotes\n\t * @access public\n\t */\n\tthis.setVotes = function(newVotes) {\n\t\tvotes = parseInt(newVotes);\n\t}\n};\n","/*\n * GoBoo - GET IT. BOOK IT. [http://goboo.de]\n *\n * (c) Tristan Lins <t.lins@goboo.de>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Create a new slot.\n *\n * @memberOf goboo\n * @class\n * @classdesc The slot representing a bookable time span within the system.\n * @constructor\n * @access public\n *\n * @copyright 2014 {@link mailto:t.lins@goboo.de Tristan Lins}\n * @license {@link http://opensource.org/licenses/MIT MIT}\n * @author Tristan Lins <t.lins@goboo.de>\n * @link http://goboo.de\n */\ngoboo.Slot = function() {\n\tvar id = -1;\n\tvar roomId = -1;\n\tvar startDateTime = new Date();\n\tvar endDateTime = null;\n\tvar duration = -1;\n\tvar playTime = null;\n\tvar capacity = -1;\n\tvar locked = false;\n\tvar attendance = -1;\n\tvar players = [];\n\tvar availableModes = [];\n\n\t/**\n\t * Get the id of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getId\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getId = function() {\n\t\treturn id;\n\t};\n\n\t/**\n\t * Set the id of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setId\n\t * @access public\n\t */\n\tthis.setId = function(newId) {\n\t\tid = newId;\n\t};\n\n\t/**\n\t * Get the room id of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getRoomId\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getRoomId = function() {\n\t\treturn roomId;\n\t};\n\n\t/**\n\t * Set the room id of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setRoomId\n\t * @access public\n\t */\n\tthis.setRoomId = function(newId) {\n\t\troomId = newId;\n\t};\n\n\t/**\n\t * Get the startDateTime of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getStartDateTime\n\t * @access public\n\t * @returns Date\n\t */\n\tthis.getStartDateTime = function() {\n\t\treturn startDateTime;\n\t};\n\n\t/**\n\t * Set the startDateTime of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setStartDateTime\n\t * @access public\n\t */\n\tthis.setStartDateTime = function(newStartDateTime) {\n\t\tstartDateTime = newStartDateTime;\n\t};\n\n\t/**\n\t * Get the endDateTime of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getEndDateTime\n\t * @access public\n\t * @returns Date\n\t */\n\tthis.getEndDateTime = function() {\n\t\tif (endDateTime) {\n\t\t\treturn endDateTime;\n\t\t}\n\n\t\tvar temp = new Date(startDateTime);\n\t\ttemp.setSeconds(temp.getSeconds() + (duration * 60));\n\t\treturn temp;\n\t};\n\n\t/**\n\t * Set the endDateTime of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setEndDateTime\n\t * @access public\n\t */\n\tthis.setEndDateTime = function(newEndDateTime) {\n\t\tendDateTime = newEndDateTime;\n\t};\n\n\t/**\n\t * Get the duration of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getDuration\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getDuration = function() {\n\t\treturn duration;\n\t};\n\n\t/**\n\t * Set the duration of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setDuration\n\t * @access public\n\t */\n\tthis.setDuration = function(newDuration) {\n\t\tduration = parseInt(newDuration);\n\t};\n\n\t/**\n\t * Get the play time of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getPlayTime\n\t * @access public\n\t * @returns int\n\t */\n\tthis.getPlayTime = function() {\n\t\treturn playTime;\n\t};\n\n\t/**\n\t * Set the play time of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setPlayTime\n\t * @access public\n\t */\n\tthis.setPlayTime = function(newPlayTime) {\n\t\tplayTime = parseInt(newPlayTime);\n\t};\n\n\t/**\n\t * Get the capacity of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getCapacity\n\t * @access public\n\t * @returns string\n\t */\n\tthis.getCapacity = function() {\n\t\treturn capacity;\n\t};\n\n\t/**\n\t * Set the capacity of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setCapacity\n\t * @access public\n\t */\n\tthis.setCapacity = function(newCapacity) {\n\t\tcapacity = parseInt(newCapacity);\n\t};\n\n\t/**\n\t * Get the locked of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getLocked\n\t * @access public\n\t * @returns boolean\n\t */\n\tthis.isLocked = function() {\n\t\treturn locked;\n\t};\n\n\t/**\n\t * Set the locked of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setLocked\n\t * @access public\n\t */\n\tthis.setLocked = function(newLocked) {\n\t\tlocked = newLocked ? true : false;\n\t};\n\n\t/**\n\t * Get the attendance of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getAttendance\n\t * @access public\n\t * @returns int|null\n\t */\n\tthis.getAttendance = function() {\n\t\treturn attendance;\n\t};\n\n\t/**\n\t * Set the attendance of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setAttendance\n\t * @access public\n\t */\n\tthis.setAttendance = function(newAttendance) {\n\t\tattendance = newAttendance !== null ? parseInt(newAttendance) : null;\n\t};\n\n\t/**\n\t * Get the players of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getPlayers\n\t * @access public\n\t * @returns Array\n\t */\n\tthis.getPlayers = function() {\n\t\treturn players;\n\t};\n\n\t/**\n\t * Set the players of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setPlayers\n\t * @access public\n\t */\n\tthis.setPlayers = function(newPlayers) {\n\t\tplayers = newPlayers ? newPlayers : [];\n\t};\n\n\t/**\n\t * Get the availableModes of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#getAvailableModes\n\t * @access public\n\t * @returns Array\n\t */\n\tthis.getAvailableModes = function() {\n\t\treturn availableModes;\n\t};\n\n\t/**\n\t * Set the availableModes of this slot.\n\t *\n\t * @memberof goboo.Slot\n\t * @alias goboo.Slot#setAvailableModes\n\t * @access public\n\t */\n\tthis.setAvailableModes = function(newAvailableModes) {\n\t\tavailableModes = newAvailableModes ? newAvailableModes : [];\n\t};\n};\n"],"sourceRoot":"sources"}